name: Upload Assets

on:
  workflow_dispatch:
    inputs:
      tag:
        description: Existing tag to upload assets to (e.g., v0.1.1)
        required: true

permissions:
  contents: write

jobs:
  build_upload:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: Build release
        run: |
          cargo build --release -p ditox-cli -p ditox-clipd
      - name: Package (Unix)
        if: runner.os != 'Windows'
        id: pack_unix
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dist
          cp target/release/ditox-cli dist/ditox
          cp target/release/ditox-clipd dist/clipd
          ARCH=$(uname -m)
          ZIP="ditox-${{ runner.os }}-${ARCH}.zip"
          (cd dist && zip -9 "../${ZIP}" ditox clipd)
          echo "asset=${ZIP}" >> "$GITHUB_OUTPUT"
          if command -v sha256sum >/dev/null 2>&1; then
            sha256sum "$ZIP" | tee "$ZIP.sha256" >/dev/null
          else
            shasum -a 256 "$ZIP" | tee "$ZIP.sha256" >/dev/null
          fi
          echo "checksum=$ZIP.sha256" >> "$GITHUB_OUTPUT"
      - name: Package (Windows)
        if: runner.os == 'Windows'
        id: pack_win
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          Copy-Item target/release/ditox-cli.exe dist/ditox.exe
          Copy-Item target/release/ditox-clipd.exe dist/clipd.exe
          $arch = $env:PROCESSOR_ARCHITECTURE
          $zip = "ditox-Windows-$arch.zip"
          Compress-Archive -Path dist/* -DestinationPath $zip -Force
          "asset=$zip" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8
          $hash = (Get-FileHash -Path $zip -Algorithm SHA256).Hash.ToLower()
          "$hash  $zip" | Out-File -FilePath "$zip.sha256" -Encoding ascii
          "checksum=$zip.sha256" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8
      - name: Upload to Release (Unix)
        if: runner.os != 'Windows'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.tag }}
          files: ${{ steps.pack_unix.outputs.asset }}
      - name: Upload checksum (Unix)
        if: runner.os != 'Windows'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.tag }}
          files: ${{ steps.pack_unix.outputs.checksum }}
      - name: Upload to Release (Windows)
        if: runner.os == 'Windows'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.tag }}
          files: ${{ steps.pack_win.outputs.asset }}
      - name: Upload checksum (Windows)
        if: runner.os == 'Windows'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.tag }}
          files: ${{ steps.pack_win.outputs.checksum }}

  nix_upload:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v27
        with:
          extra_nix_config: |
            experimental-features = nix-command flakes
      - name: Build flake
        run: nix build -L .#ditox
      - name: Archive Nix binary
        run: |
          mkdir -p dist
          cp result/bin/ditox-cli dist/
          tar -czf dist/ditox-cli-nix-linux-x86_64.tar.gz -C dist ditox-cli
      - name: Upload Nix asset to Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.tag }}
          files: dist/ditox-cli-nix-linux-x86_64.tar.gz
      - name: Upload Nix checksum
        run: |
          sha256sum dist/ditox-cli-nix-linux-x86_64.tar.gz > dist/ditox-cli-nix-linux-x86_64.tar.gz.sha256
        shell: bash
      - name: Attach Nix checksum
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ inputs.tag }}
          files: dist/ditox-cli-nix-linux-x86_64.tar.gz.sha256
