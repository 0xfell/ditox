name: CI

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build and Test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: Fmt
        run: cargo fmt --all -- --check
      - name: Clippy
        run: cargo clippy --all-targets -- -D warnings
      - name: Test
        run: cargo test --all --verbose
      - name: Build release
        run: |
          cargo build --release -p ditox-cli -p ditox-clipd
      - name: Prepare artifacts (Unix)
        if: runner.os != 'Windows'
        run: |
          mkdir -p artifacts
          cp target/release/ditox-cli artifacts/ditox
          cp target/release/ditox-clipd artifacts/clipd
      - name: Prepare artifacts (Windows)
        if: runner.os == 'Windows'
        shell: bash
        run: |
          mkdir -p artifacts
          cp target/release/ditox-cli.exe artifacts/ditox.exe || cp target/release/ditox-cli.exe artifacts/ditox.exe
          cp target/release/ditox-clipd.exe artifacts/clipd.exe || cp target/release/ditox-clipd.exe artifacts/clipd.exe
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ditox-${{ runner.os }}
          path: artifacts/*

