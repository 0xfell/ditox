name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        id: create
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref_name, 'rc') }}
          generate_release_notes: true

  build_upload:
    needs: create_release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
      - name: Build release
        run: |
          cargo build --release -p ditox-cli -p ditox-clipd
      - name: Package (Unix)
        if: runner.os != 'Windows'
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p dist
          cp target/release/ditox-cli dist/ditox
          cp target/release/ditox-clipd dist/clipd
          echo "ARCH=$(uname -m)" >> $GITHUB_ENV
          cd dist && zip -9 ../ditox-${{ runner.os }}-${{ env.ARCH }}.zip ditox clipd
      - name: Package (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path dist | Out-Null
          Copy-Item target/release/ditox-cli.exe dist/ditox.exe
          Copy-Item target/release/ditox-clipd.exe dist/clipd.exe
          $env:ARCH = $env:PROCESSOR_ARCHITECTURE
          Compress-Archive -Path dist/* -DestinationPath ("ditox-Windows-" + $env:ARCH + ".zip") -Force
      - name: Upload to Release (Unix)
        if: runner.os != 'Windows'
        uses: softprops/action-gh-release@v2
        with:
          files: ditox-${{ runner.os }}-${{ env.ARCH }}.zip
      - name: Upload to Release (Windows)
        if: runner.os == 'Windows'
        uses: softprops/action-gh-release@v2
        with:
          files: ditox-Windows-${{ env.PROCESSOR_ARCHITECTURE }}.zip

